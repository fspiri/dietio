DONE - search a way by which the string content can be retrieved:
    -> language swap options

Now that i have a reliable way by which to extract info from the input boxes, i should find a way to arrange them into a JSON file.
    the data structure for now is like.
    They should be decided based on the active table.
    for active_table_n all the data should be grouped into a single chunk.
    What's the best way to do so?

{ 'table' : 'table_0', 'food_name': 'example_name', 'food_quantity': '0', 'food_calories' : '0', 'food_proteins': '0', 'food_cost': '0' }
            breakfast    name                         quantity              calories                proteins            cost

    To create:
    - Count how many rows a table has.
    - Then count and divide data in chunks of 5, assigning 0 to data that's null.
    - Then divide on multiple of five based on how many rows there are in tables.
    - Convert data into JSON format as before.

    js function to help with JSON conversion:
        - data to JSON: stringify(); better yet: toJSON();
        - JSON to data: parse();


TODO 10-5
    DONE - Gather data from all rows of nested tables - start: 10.23, finish:11.25
    - convert data into object adn then into JSON - start:11.40, finish: 12.00
    - the moment of creating REST APIs has come
TODO 11-5
    DONE - create database models
    - list of food to be added
        - my diet's food lol
        - meats
        - fish
            - can tuna
        - dairy products
            - ricotta
            - mozzarella
            - parmigiano
            - milk
        - cereals
        - processed cereals
            - pizza *
            - pasta *
            - pane *
        - vegetables
        * = versioni integrali, kamut

2 - should each user input their statistics?
    PROS
        allows automatic diet formation
        more personalization
    CONS
        slower and more difficult profile-creation process

COMPLETED 23-5
    LEARNT that i need to pass values to the js and create the
        template with js
    - understand how to pass values to js

DONE 24-5
    finish passing meals and foods values.
    at first  I can start by passing all the meals and foods, but
    it would not be a good idea for later.
    - Probably will slow down the program or block it completely
        So what to choose?
    DONE - passed all the foods and meals in js. The program works fine.
        - How will it work once there will be more elements?

    QUESTION (on which i will work on later)
        should I pass all the values to js and then process them in js?
        - how to do if a user wants to change diet? my mealfoods are passed from python
            using diet_id as argument ->
            - I have no way from js to call a python function

DONE 25-5
    - finish the process refining the values.
        - STEP 5
        - STEP 6
    - check

TODO 27-5
    DONE implement the 'change-day' function
        - buttons
        - js functions
        - update the text
    - think abot better UI ffs
    - rename from 'dietio' to 'diaita'
    - fix the links of the app
        LINK PROBLEMS:
        - after signing it goes to /signin and not /main
        - add a 'create' and 'edit' buttons
        - or automatic create for new users

